@model TorreWebapp.Models.JobOpportunity.JobDetail

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Job Detail</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.objective)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.objective)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.organizations)
        </dt>
        <dd class="col-sm-10">
            <ul>
                @foreach (var organization in Model.organizations)
                {
                    <li>
                        @organization.name
                    </li>
                }
            </ul>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.strengths)
        </dt>
        <dd class="col-sm-10">
            <ul>
                @foreach (var str in Model.strengths)
                {
                    string strenght = $"{str.name}: {str.experience}";
                    <li>
                        @strenght
                    </li>
                }
            </ul>
        </dd>
        @if (!(Model.compensation == null) && Model.compensation.visible)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.compensation)
            </dt>
            @if (Model.compensation.data == null)
            {
                <dd class="col-sm-10">
                    @{
                        string compensation = $"{Model.compensation.minAmount}{Model.compensation.currency} - {Model.compensation.maxAmount}{Model.compensation.currency} {Model.compensation.periodicity} ";
                    }
                    @compensation
                </dd>
            }
            else
            {
                <dd class="col-sm-10">
                    @{
                        string compensation = $"{Model.compensation.data.minAmount}{Model.compensation.data.currency} - {Model.compensation.data.maxAmount}{Model.compensation.data.currency} {Model.compensation.data.periodicity} ";
                    }
                    @compensation
                </dd>
            }
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.deadline)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.deadline)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.completion)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.completion)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.crawled)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.crawled)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.opportunity)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.opportunity)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.active)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.active)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.stableOn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.stableOn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.status)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Index">Back to Search</a>
</div>
